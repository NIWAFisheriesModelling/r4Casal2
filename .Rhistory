file.create(model_quant_file)
header = paste0("# Model quantities {#modelquantities}")
if(is.null(model_label)) {
header = paste0("# Model quantities for ", model_label, "{#modelquantities}")
}
write(header, file = model_quant_file, append = T)
## SSB
write("## SSB \n\n```{r ssb, eval = T, echo = T}", file = model_quant_file, append = T)
write("plot_derived_quantities(cas2_mpd)", file = model_fit_file, append = T)
write("``` \n", file = model_quant_file, append = T)
## render book
render_book(input = output_dir)
plot_derived_quantities(cas2_mpd)
#################################################
## Create the second page '02-ModelFits.Rmd'
## this page will contain model fits
#################################################
model_fit_file = file.path(output_dir, "02-ModelFits.Rmd")
file.create(model_fit_file)
header = paste0("# Model fit to observations {#modelfit}")
if(is.null(model_label)) {
header = paste0("# Model fit to observations for ", model_label, "{#modelfit}")
}
write(header, file = model_fit_file, append = T)
## get abundance observations
write("## Abundance/Biomass \n\n```{r abundance_fits, eval = T, echo = T}", file = model_fit_file, append = T)
write("plot_relative_index(cas2_mpd, plot_type = 'classic')", file = model_fit_file, append = T)
write("plot_relative_index(cas2_mpd, plot_type = 'classic_ribbon')", file = model_fit_file, append = T)
write("plot_relative_index(cas2_mpd, plot_type = 'residual')", file = model_fit_file, append = T)
write("``` \n", file = model_fit_file, append = T)
## get compositional observations
write("## Composition \n\n```{r comp_fits, eval = T, echo = T}", file = model_fit_file, append = T)
write("plot_compositional_observations(cas2_mpd)", file = model_fit_file, append = T)
write("``` \n", file = model_fit_file, append = T)
#################################################
## Create the third page '03-ModelQuantities.Rmd'
#################################################
model_quant_file = file.path(output_dir, "02-ModelQuantities.Rmd")
file.create(model_quant_file)
header = paste0("# Model quantities {#modelquantities}")
if(is.null(model_label)) {
header = paste0("# Model quantities for ", model_label, "{#modelquantities}")
}
write(header, file = model_quant_file, append = T)
## SSB
write("## SSB \n\n```{r ssb, eval = T, echo = T}", file = model_quant_file, append = T)
write("plot_derived_quantities(cas2_mpd)", file = model_fit_file, append = T)
write("``` \n", file = model_quant_file, append = T)
## Recruitment
write("## Recruitment \n\n```{r recruit, eval = T, echo = T}", file = model_quant_file, append = T)
write("recruit_df = get_recruitmen(cas2_mpd)", file = model_quant_file, append = T)
write("``` \n", file = model_quant_file, append = T)
## render book
render_book(input = output_dir)
get_recruitment
get_BH_recruitment()
recruit_df = get_BH_recruitment(cas2_mpd)
head(recruit_df )
names(cas2_mpd)
plot_recruitment(model = cas2_mpd, report_label = 'Recruitment_ENLD')
plot_recruitment(model = cas2_mpd, report_label = 'Recruitment_ENLD', type = 'ycs_values') + ylab('YCS values')
?plot_recruitment
#################################################
## Create the third page '03-ModelQuantities.Rmd'
#################################################
model_quant_file = file.path(output_dir, "02-ModelQuantities.Rmd")
file.create(model_quant_file)
header = paste0("# Model quantities {#modelquantities}")
if(is.null(model_label)) {
header = paste0("# Model quantities for ", model_label, "{#modelquantities}")
}
write(header, file = model_quant_file, append = T)
## SSB
write("## SSB \n\n```{r ssb, eval = T, echo = T}", file = model_quant_file, append = T)
write("plot_derived_quantities(cas2_mpd)", file = model_fit_file, append = T)
write("``` \n", file = model_quant_file, append = T)
## Recruitment
write("## Recruitment \n\n```{r recruit, eval = T, echo = T}", file = model_quant_file, append = T)
write("plot_recruitment(model = cas2_mpd, report_label = 'Recruitment_ENLD', type = 'ycs_values') + ylab('YCS values')", file = model_quant_file, append = T)
write("plot_recruitment(model = cas2_mpd, report_label = 'Recruitment_ENLD', type = 'standardised_ycs') + ylab('Standardised YCS values')", file = model_quant_file, append = T)
write("plot_recruitment(model = cas2_mpd, report_label = 'Recruitment_ENLD', type = 'true_ycs') + ylab('True YCS values')", file = model_quant_file, append = T)
write("``` \n", file = model_quant_file, append = T)
## render book
render_book(input = output_dir)
?plot_pressure
plot_pressure
names(cas2_mpd)
plot_pressure(model = cas2_mpd, report_label = 'fisheries_EN')
model = cas2_mpd
report_label = 'fisheries_EN'
muliple_iterations_in_a_report = FALSE
N_runs = 1
temp_DF = NULL
check_report = check_report_label(report_label = report_label, model = model)
if(!check_report$check)
stop(check_report$msg)
## get the report out
this_report = get(report_label, model)
## check that the report lab
fishery_df = get_fisheries(model)
head(fishery_df)
library(r4Casal2)
# build package
# this builds all the help files
library(devtools)
library(roxygen2)
document()
document()
library(r4Casal2)
verbose
output_folder_name
config_filename
if(verbose)
print("Enter: build_assessment_bookdown")
full_mpd_file = file.path(csl_dir, mpd_filename)
full_config_file = file.path(csl_dir, config_filename)
## check they exist
if(!file.exists(full_mpd_file))
stop(paste0("Could not find ", mpd_filename, " in 'csl_dir'"))
if(!file.exists(full_config_file))
stop(paste0("Could not find ", config_filename, " in 'csl_dir'"))
## check they can be read without error
cas2_mpd = tryCatch(expr = extract.mpd(file = mpd_filename, path = csl_dir), error = function(e){e})
if(is.null(cas2_mpd) | inherits(cas2_mpd, "error"))
stop("Could not read in mpd_filename")
config_summary = tryCatch(expr = summarise_config(config_file  = config_filename, config_dir  = csl_dir), error = function(e){e})
if(is.null(config_summary) | inherits(config_summary, "error"))
stop("Could not read in config_file")
## create output directory
output_dir = file.path(csl_dir, output_folder_name)
if(!dir.exists(output_dir)) {
if(verbose)
print("creating 'output_dir'")
dir.create(output_dir)
}
## build a skeleton Bookdown
bookdown:::bookdown_skeleton(output_dir)
## get rid of these skeleton changes. This may need tweaking over time
files_to_remove = c("01-intro.Rmd", "02-cross-refs.Rmd", "03-parts.Rmd", "04-citations.Rmd","05-blocks.Rmd","06-share.Rmd")
for(i in 1:length(files_to_remove)) {
file.remove(file.path(output_dir, files_to_remove[i]))
}
#################################################
## Create the first page '01-Model Inputs.Rmd'
## this page will contain most of the output from summarise_config
#################################################
model_input_file = file.path(output_dir, "01-ModelInputs.Rmd")
file.create(model_input_file)
header = paste0("# Model structure {#inputs}")
if(is.null(model_label)) {
header = paste0("# Model structure for ", model_label, "{#inputs}")
}
first_chunk =
"
## Read in neccessary R libraries
```{r install_packages, results = 'hide', message=FALSE, warning=FALSE}
library(r4Casal2)
library(Casal2)
library(knitr)
library(ggplot2)
library(dplyr)
library(reshape2)
```
"
write(header, file = model_input_file, append = T)
write(first_chunk, file = model_input_file, append = T)
## hide the path setting so people can't see your directory
## when bookdow compiled. this id done by setting echo = F
write("```{r set_path, eval = T, echo = F}", file = model_input_file, append = T)
write(paste0('csl_dir = "', normalizePath(csl_dir, winslash = "/"),'"'), file = model_input_file, append = T)
write("```", file = model_input_file, append = T)
## read in model
write("```{r read_in_info, eval = T, echo = T, results = F}", file = model_input_file, append = T)
write(paste0("cas2_mpd = extract.mpd(file = '",mpd_filename,"', path = csl_dir)"), file = model_input_file, append = T)
write(paste0("config_summary = summarise_config(config_file = '",config_filename,"', config_dir = csl_dir)"), file = model_input_file, append = T)
write('catches_melted = melt(config_summary$catch_df, id.vars = c("process", "year"))', file = model_input_file, append = T)
write("```\n\n\n", file = model_input_file, append = T)
## Plot input Catch
write('## Input catches\n\n```{r plot_input_catches, eval = T, echo = T, results = T,fig.cap = "Catch by fishery over time"}', file = model_input_file, append = T)
write(
'ggplot(catches_melted, aes(x = year, y = value, col = variable)) +
geom_line(size = 1.5) +
labs(x = "Year", y = "Catch (t)", col = "Fishery")', file = model_input_file, append = T)
write("```\n\n\n", file = model_input_file, append = T)
## Plot input Observations
write('## Input Observations\n\n```{r plot_input_observations, eval = T, echo = T, results = T,fig.cap = "Years in which observations are calculated"}', file = model_input_file, append = T)
write(
'ggplot(config_summary$obs_year_df, aes(x = year, y = observation, col = observation, size = active)) +
geom_point() +
guides(colour = "none", size = "none")', file = model_input_file, append = T)
write("```\n\n\n", file = model_input_file, append = T)
## Annual cycle table
write('## Annual cycle\n\n```{r table_annual_cycle, eval = T, echo = T, results = T}', file = model_input_file, append = T)
cat(paste0("kable(x = config_summary$time_step_df,format = 'html', tab.attr = ", dQuote("style='width:100%;'", q = F),")\n"), file = model_input_file, append = T)
write("```\n\n\n", file = model_input_file, append = T)
## Category info
write('## The Partition\n\n```{r table_partition, eval = T, echo = T, results = T}', file = model_input_file, append = T)
cat(paste0("kable(x = config_summary$full_category_df,format = 'html', tab.attr = ", dQuote("style='width:100%;'", q = F),")\n"), file = model_input_file, append = T)
write("```\n\n\n", file = model_input_file, append = T)
## Estimated parameters
write('## Estimated parameters\n\n```{r table_est_pars, eval = T, echo = T, results = T}', file = model_input_file, append = T)
cat(paste0("kable(x = config_summary$estimate_df,format = 'html', tab.attr = ", dQuote("style='width:100%;'", q = F),")\n"), file = model_input_file, append = T)
write("```\n\n\n", file = model_input_file, append = T)
#################################################
## Create the second page '02-ModelFits.Rmd'
## this page will contain model fits
#################################################
model_fit_file = file.path(output_dir, "02-ModelFits.Rmd")
file.create(model_fit_file)
header = paste0("# Model fit to observations {#modelfit}")
if(is.null(model_label)) {
header = paste0("# Model fit to observations for ", model_label, "{#modelfit}")
}
write(header, file = model_fit_file, append = T)
## get abundance observations
write("## Abundance/Biomass \n\n```{r abundance_fits, eval = T, echo = T}", file = model_fit_file, append = T)
write("plot_relative_index(cas2_mpd, plot_type = 'classic')", file = model_fit_file, append = T)
write("plot_relative_index(cas2_mpd, plot_type = 'classic_ribbon')", file = model_fit_file, append = T)
write("plot_relative_index(cas2_mpd, plot_type = 'residual')", file = model_fit_file, append = T)
write("``` \n", file = model_fit_file, append = T)
## get compositional observations
write("## Composition \n\n```{r comp_fits, eval = T, echo = T}", file = model_fit_file, append = T)
write("plot_compositional_observations(cas2_mpd)", file = model_fit_file, append = T)
write("``` \n", file = model_fit_file, append = T)
#################################################
## Create the third page '03-ModelQuantities.Rmd'
#################################################
model_quant_file = file.path(output_dir, "02-ModelQuantities.Rmd")
file.create(model_quant_file)
header = paste0("# Model quantities {#modelquantities}")
if(is.null(model_label)) {
header = paste0("# Model quantities for ", model_label, "{#modelquantities}")
}
write(header, file = model_quant_file, append = T)
## SSB
write("## SSB \n\n```{r ssb, eval = T, echo = T}", file = model_quant_file, append = T)
write("plot_derived_quantities(cas2_mpd)", file = model_fit_file, append = T)
write("``` \n", file = model_quant_file, append = T)
## Recruitment
write("## Recruitment \n\n```{r recruit, eval = T, echo = T}", file = model_quant_file, append = T)
write("plot_recruitment(model = cas2_mpd, report_label = 'Recruitment_ENLD', type = 'ycs_values') + ylab('YCS values')", file = model_quant_file, append = T)
write("plot_recruitment(model = cas2_mpd, report_label = 'Recruitment_ENLD', type = 'standardised_ycs') + ylab('Standardised YCS values')", file = model_quant_file, append = T)
write("plot_recruitment(model = cas2_mpd, report_label = 'Recruitment_ENLD', type = 'true_ycs') + ylab('True YCS values')", file = model_quant_file, append = T)
write("``` \n", file = model_quant_file, append = T)
model
fishery_df = get_fisheries(model)
ggplot(quantity, aes(x = year, y = vars(quantity), col = fishery)) +
geom_line(size = 2) +
labs(colour="Fishery", linetype = "Fishery", x = "Years", y = quantity) +
facet_wrap(~fishery)
quantity = "fishing_pressure"
ggplot(quantity, aes(x = year, y = vars(quantity), col = fishery)) +
geom_line(size = 2) +
labs(colour="Fishery", linetype = "Fishery", x = "Years", y = quantity) +
facet_wrap(~fishery)
?vars
fishery_df = get_fisheries(model)
ggplot(quantity, aes_string(x = year, y = quantity, col = fishery)) +
geom_line(size = 2) +
labs(colour="Fishery", linetype = "Fishery", x = "Years", y = quantity) +
facet_wrap(~fishery)
ggplot(quantity, aes_string(x = "year", y = quantity, col = "fishery")) +
geom_line(size = 2) +
labs(colour="Fishery", linetype = "Fishery", x = "Years", y = quantity) +
facet_wrap(~fishery)
ggplot(quantity, aes_string(x = "year", y = quantity, col = "fishery")) +
geom_line(size = 2)
head(fishery_df)
quantity
ggplot(fishery_df, aes_string(x = "year", y = quantity, col = "fishery")) +
geom_line(size = 2) +
labs(colour="Fishery", linetype = "Fishery", x = "Years", y = quantity) +
facet_wrap(~fishery)
library(r4Casal2)
#################################################
## Create the third page '03-ModelQuantities.Rmd'
#################################################
model_quant_file = file.path(output_dir, "02-ModelQuantities.Rmd")
file.create(model_quant_file)
header = paste0("# Model quantities {#modelquantities}")
if(is.null(model_label)) {
header = paste0("# Model quantities for ", model_label, "{#modelquantities}")
}
write(header, file = model_quant_file, append = T)
## SSB
write("## SSB \n\n```{r ssb, eval = T, echo = T}", file = model_quant_file, append = T)
write("plot_derived_quantities(cas2_mpd)", file = model_fit_file, append = T)
write("``` \n", file = model_quant_file, append = T)
## Recruitment
write("## Recruitment \n\n```{r recruit, eval = T, echo = T}", file = model_quant_file, append = T)
write("plot_recruitment(model = cas2_mpd, report_label = 'Recruitment_ENLD', type = 'ycs_values') + ylab('YCS values')", file = model_quant_file, append = T)
write("plot_recruitment(model = cas2_mpd, report_label = 'Recruitment_ENLD', type = 'standardised_ycs') + ylab('Standardised YCS values')", file = model_quant_file, append = T)
write("plot_recruitment(model = cas2_mpd, report_label = 'Recruitment_ENLD', type = 'true_ycs') + ylab('True YCS values')", file = model_quant_file, append = T)
write("``` \n", file = model_quant_file, append = T)
## Exploitation
write("## Exploitation \n\n```{r exploitation, eval = T, echo = T}", file = model_quant_file, append = T)
write("plot_pressure(model = cas2_mpd, report_label = 'fisheries_EN') + ylab('YCS values')", file = model_quant_file, append = T)
write("``` \n", file = model_quant_file, append = T)
## render book
render_book(input = output_dir)
#################################################
model_quant_file = file.path(output_dir, "02-ModelQuantities.Rmd")
file.create(model_quant_file)
header = paste0("# Model quantities {#modelquantities}")
if(is.null(model_label)) {
header = paste0("# Model quantities for ", model_label, "{#modelquantities}")
}
write(header, file = model_quant_file, append = T)
## SSB
write("## SSB \n\n```{r ssb, eval = T, echo = T}", file = model_quant_file, append = T)
write("plot_derived_quantities(cas2_mpd)", file = model_fit_file, append = T)
write("``` \n", file = model_quant_file, append = T)
## Recruitment
write("## Recruitment \n\n```{r recruit, eval = T, echo = T}", file = model_quant_file, append = T)
write("plot_recruitment(model = cas2_mpd, report_label = 'Recruitment_ENLD', type = 'ycs_values') + ylab('YCS values')", file = model_quant_file, append = T)
write("plot_recruitment(model = cas2_mpd, report_label = 'Recruitment_ENLD', type = 'standardised_ycs') + ylab('Standardised YCS values')", file = model_quant_file, append = T)
write("plot_recruitment(model = cas2_mpd, report_label = 'Recruitment_ENLD', type = 'true_ycs') + ylab('True YCS values')", file = model_quant_file, append = T)
write("``` \n", file = model_quant_file, append = T)
## Exploitation
write("## Exploitation \n\n```{r exploitation, eval = T, echo = T}", file = model_quant_file, append = T)
write("plot_pressure(model = cas2_mpd) + ylab('Fishing Pressure')", file = model_quant_file, append = T)
write("``` \n", file = model_quant_file, append = T)
## render book
render_book(input = output_dir)
plot_pressure
?plot_pressure
#################################################
model_quant_file = file.path(output_dir, "02-ModelQuantities.Rmd")
file.create(model_quant_file)
header = paste0("# Model quantities {#modelquantities}")
if(is.null(model_label)) {
header = paste0("# Model quantities for ", model_label, "{#modelquantities}")
}
write(header, file = model_quant_file, append = T)
## SSB
write("## SSB \n\n```{r ssb, eval = T, echo = T}", file = model_quant_file, append = T)
write("plot_derived_quantities(cas2_mpd)", file = model_fit_file, append = T)
write("``` \n", file = model_quant_file, append = T)
## Recruitment
write("## Recruitment \n\n```{r recruit, eval = T, echo = T}", file = model_quant_file, append = T)
write("plot_recruitment(model = cas2_mpd, report_label = 'Recruitment_ENLD', type = 'ycs_values') + ylab('YCS values')", file = model_quant_file, append = T)
write("plot_recruitment(model = cas2_mpd, report_label = 'Recruitment_ENLD', type = 'standardised_ycs') + ylab('Standardised YCS values')", file = model_quant_file, append = T)
write("plot_recruitment(model = cas2_mpd, report_label = 'Recruitment_ENLD', type = 'true_ycs') + ylab('True YCS values')", file = model_quant_file, append = T)
write("``` \n", file = model_quant_file, append = T)
## Exploitation
write("## Exploitation \n\n```{r exploitation, eval = T, echo = T}", file = model_quant_file, append = T)
write("plot_pressure(model = cas2_mpd, quantity = 'fishing_pressure') + ylab('Fishing Pressure')", file = model_quant_file, append = T)
write("plot_pressure(model = cas2_mpd, quantity = 'exploitation') + ylab('Exploitation')", file = model_quant_file, append = T)
write("plot_pressure(model = cas2_mpd, quantity = 'actual_catch') + ylab('Actual Catch')", file = model_quant_file, append = T)
write("``` \n", file = model_quant_file, append = T)
## render book
render_book(input = output_dir)
full_DF = get_selectivities(model)
head(full_DF)
# build package
# this builds all the help files
library(devtools)
library(roxygen2)
document()
library(r4Casal2)
## Selectivities
write("## Selectivities \n\n```{r selectivities, eval = T, echo = T}", file = model_quant_file, append = T)
write("plot_selectivities(model = cas2_mpd)", file = model_quant_file, append = T)
write("``` \n", file = model_quant_file, append = T)
## render book
render_book(input = output_dir)
full_DF = get_selectivities(model)
#################################################
## Create the third page '03-ModelQuantities.Rmd'
#################################################
model_quant_file = file.path(output_dir, "02-ModelQuantities.Rmd")
file.create(model_quant_file)
header = paste0("# Model quantities {#modelquantities}")
if(is.null(model_label)) {
header = paste0("# Model quantities for ", model_label, "{#modelquantities}")
}
write(header, file = model_quant_file, append = T)
## SSB
write("## SSB \n\n```{r ssb, eval = T, echo = T}", file = model_quant_file, append = T)
write("plot_derived_quantities(cas2_mpd)", file = model_fit_file, append = T)
write("``` \n", file = model_quant_file, append = T)
## Recruitment
write("## Recruitment \n\n```{r recruit, eval = T, echo = T}", file = model_quant_file, append = T)
write("plot_recruitment(model = cas2_mpd, report_label = 'Recruitment_ENLD', type = 'ycs_values') + ylab('YCS values')", file = model_quant_file, append = T)
write("plot_recruitment(model = cas2_mpd, report_label = 'Recruitment_ENLD', type = 'standardised_ycs') + ylab('Standardised YCS values')", file = model_quant_file, append = T)
write("plot_recruitment(model = cas2_mpd, report_label = 'Recruitment_ENLD', type = 'true_ycs') + ylab('True YCS values')", file = model_quant_file, append = T)
write("``` \n", file = model_quant_file, append = T)
## Exploitation
write("## Exploitation \n\n```{r exploitation, eval = T, echo = T}", file = model_quant_file, append = T)
write("plot_pressure(model = cas2_mpd, quantity = 'fishing_pressure') + ylab('Fishing Pressure')", file = model_quant_file, append = T)
write("plot_pressure(model = cas2_mpd, quantity = 'exploitation') + ylab('Exploitation')", file = model_quant_file, append = T)
write("plot_pressure(model = cas2_mpd, quantity = 'actual_catch') + ylab('Actual Catch')", file = model_quant_file, append = T)
write("``` \n", file = model_quant_file, append = T)
## Selectivities
write("## Selectivities \n\n```{r selectivities, eval = T, echo = T}", file = model_quant_file, append = T)
write("plot_selectivities(model = cas2_mpd)", file = model_quant_file, append = T)
write("``` \n", file = model_quant_file, append = T)
## render book
render_book(input = output_dir)
library(r4Casal2)
plot_selectivities(model = cas2_mpd)
model = cas2_mpd
full_DF = get_selectivities(model)
if(!is.null(selectivity_labels))
full_DF = subset(full_DF, subset = full_DF$selectivity_label %in% selectivity_labels)
head(full_DF)
library(r4Casal2)
## Create the third page '03-ModelQuantities.Rmd'
#################################################
model_quant_file = file.path(output_dir, "02-ModelQuantities.Rmd")
file.create(model_quant_file)
header = paste0("# Model quantities {#modelquantities}")
if(is.null(model_label)) {
header = paste0("# Model quantities for ", model_label, "{#modelquantities}")
}
write(header, file = model_quant_file, append = T)
## SSB
write("## SSB \n\n```{r ssb, eval = T, echo = T}", file = model_quant_file, append = T)
write("plot_derived_quantities(cas2_mpd)", file = model_fit_file, append = T)
write("``` \n", file = model_quant_file, append = T)
## Recruitment
write("## Recruitment \n\n```{r recruit, eval = T, echo = T}", file = model_quant_file, append = T)
write("plot_recruitment(model = cas2_mpd, report_label = 'Recruitment_ENLD', type = 'ycs_values') + ylab('YCS values')", file = model_quant_file, append = T)
write("plot_recruitment(model = cas2_mpd, report_label = 'Recruitment_ENLD', type = 'standardised_ycs') + ylab('Standardised YCS values')", file = model_quant_file, append = T)
write("plot_recruitment(model = cas2_mpd, report_label = 'Recruitment_ENLD', type = 'true_ycs') + ylab('True YCS values')", file = model_quant_file, append = T)
write("``` \n", file = model_quant_file, append = T)
## Exploitation
write("## Exploitation \n\n```{r exploitation, eval = T, echo = T}", file = model_quant_file, append = T)
write("plot_pressure(model = cas2_mpd, quantity = 'fishing_pressure') + ylab('Fishing Pressure')", file = model_quant_file, append = T)
write("plot_pressure(model = cas2_mpd, quantity = 'exploitation') + ylab('Exploitation')", file = model_quant_file, append = T)
write("plot_pressure(model = cas2_mpd, quantity = 'actual_catch') + ylab('Actual Catch')", file = model_quant_file, append = T)
write("``` \n", file = model_quant_file, append = T)
## Selectivities
write("## Selectivities \n\n```{r selectivities, eval = T, echo = T}", file = model_quant_file, append = T)
write("plot_selectivities(model = cas2_mpd)", file = model_quant_file, append = T)
write("``` \n", file = model_quant_file, append = T)
## render book
render_book(input = output_dir)
head(full_DF)
"plot_selectivities" <- function(model, selectivity_labels = NULL) {
full_DF = get_selectivities(model)
if(!is.null(selectivity_labels))
full_DF = subset(full_DF, subset = full_DF$selectivity_label %in% selectivity_labels)
plt = ggplot(full_DF, aes(x = bin, group = selectivity_labels, col = selectivity_labels)) +
geom_line(aes(y = selectivity), size = 2)
return(plt)
}
#################################################
model_quant_file = file.path(output_dir, "02-ModelQuantities.Rmd")
file.create(model_quant_file)
header = paste0("# Model quantities {#modelquantities}")
if(is.null(model_label)) {
header = paste0("# Model quantities for ", model_label, "{#modelquantities}")
}
write(header, file = model_quant_file, append = T)
## SSB
write("## SSB \n\n```{r ssb, eval = T, echo = T}", file = model_quant_file, append = T)
write("plot_derived_quantities(cas2_mpd)", file = model_fit_file, append = T)
write("``` \n", file = model_quant_file, append = T)
## Recruitment
write("## Recruitment \n\n```{r recruit, eval = T, echo = T}", file = model_quant_file, append = T)
write("plot_recruitment(model = cas2_mpd, report_label = 'Recruitment_ENLD', type = 'ycs_values') + ylab('YCS values')", file = model_quant_file, append = T)
write("plot_recruitment(model = cas2_mpd, report_label = 'Recruitment_ENLD', type = 'standardised_ycs') + ylab('Standardised YCS values')", file = model_quant_file, append = T)
write("plot_recruitment(model = cas2_mpd, report_label = 'Recruitment_ENLD', type = 'true_ycs') + ylab('True YCS values')", file = model_quant_file, append = T)
write("``` \n", file = model_quant_file, append = T)
## Exploitation
write("## Exploitation \n\n```{r exploitation, eval = T, echo = T}", file = model_quant_file, append = T)
write("plot_pressure(model = cas2_mpd, quantity = 'fishing_pressure') + ylab('Fishing Pressure')", file = model_quant_file, append = T)
write("plot_pressure(model = cas2_mpd, quantity = 'exploitation') + ylab('Exploitation')", file = model_quant_file, append = T)
write("plot_pressure(model = cas2_mpd, quantity = 'actual_catch') + ylab('Actual Catch')", file = model_quant_file, append = T)
write("``` \n", file = model_quant_file, append = T)
## Selectivities
write("## Selectivities \n\n```{r selectivities, eval = T, echo = T}", file = model_quant_file, append = T)
write("plot_selectivities(model = cas2_mpd)", file = model_quant_file, append = T)
write("``` \n", file = model_quant_file, append = T)
## render book
render_book(input = output_dir)
library(r4Casal2)
plot_derived_quantities(cas2_mpd)
#################################################
## Create the third page '03-ModelQuantities.Rmd'
#################################################
model_quant_file = file.path(output_dir, "02-ModelQuantities.Rmd")
file.create(model_quant_file)
header = paste0("# Model quantities {#modelquantities}")
if(is.null(model_label)) {
header = paste0("# Model quantities for ", model_label, "{#modelquantities}")
}
write(header, file = model_quant_file, append = T)
## SSB
write("## SSB \n\n```{r ssb, eval = T, echo = T}", file = model_quant_file, append = T)
write("plot_derived_quantities(cas2_mpd)", file = model_quant_file, append = T)
write("``` \n", file = model_quant_file, append = T)
## Recruitment
write("## Recruitment \n\n```{r recruit, eval = T, echo = T}", file = model_quant_file, append = T)
write("plot_recruitment(model = cas2_mpd, report_label = 'Recruitment_ENLD', type = 'ycs_values') + ylab('YCS values')", file = model_quant_file, append = T)
write("plot_recruitment(model = cas2_mpd, report_label = 'Recruitment_ENLD', type = 'standardised_ycs') + ylab('Standardised YCS values')", file = model_quant_file, append = T)
write("plot_recruitment(model = cas2_mpd, report_label = 'Recruitment_ENLD', type = 'true_ycs') + ylab('True YCS values')", file = model_quant_file, append = T)
write("``` \n", file = model_quant_file, append = T)
## Exploitation
write("## Exploitation \n\n```{r exploitation, eval = T, echo = T}", file = model_quant_file, append = T)
write("plot_pressure(model = cas2_mpd, quantity = 'fishing_pressure') + ylab('Fishing Pressure')", file = model_quant_file, append = T)
write("plot_pressure(model = cas2_mpd, quantity = 'exploitation') + ylab('Exploitation')", file = model_quant_file, append = T)
write("plot_pressure(model = cas2_mpd, quantity = 'actual_catch') + ylab('Actual Catch')", file = model_quant_file, append = T)
write("``` \n", file = model_quant_file, append = T)
## Selectivities
write("## Selectivities \n\n```{r selectivities, eval = T, echo = T}", file = model_quant_file, append = T)
write("plot_selectivities(model = cas2_mpd)", file = model_quant_file, append = T)
write("``` \n", file = model_quant_file, append = T)
## render book
render_book(input = output_dir)
library(r4Casal2)
